plotly
folium
koreanize_matplotlib
streamlit-folium
import streamlit as st
import yfinance as yf
import pandas as pd
from datetime import datetime, timedelta
import plotly.graph_objects as go
from plotly.subplots import make_subplots

# 페이지 설정
st.set_page_config(layout="wide", page_title="글로벌 시가총액 TOP 10 기업 주가 변화 📈")

# 앱 제목
st.title("💰 글로벌 시가총액 TOP 10 기업 주가 변화 📈")
st.markdown("---")

# 앱 소개
st.write(
    """
    이 페이지에서는 현재 전 세계 시가총액 상위 10개 기업(예시)의 지난 3년간 주가 변화를 인터랙티브한 그래프로 보여줍니다.
    실시간 시가총액 순위와 주가는 변동될 수 있습니다.
    """
)

# 시가총액 TOP 10 기업 티커 (2025년 5월 말 기준 예시)
# 실제 시가총액 순위는 변동성이 크므로, 최신 정보를 반영해야 합니다.
# (알파벳 GOOG와 GOOGL은 동일 기업의 다른 종류 주식입니다.)
top10_companies = {
    "AAPL": "Apple Inc.",
    "MSFT": "Microsoft Corp.",
    "NVDA": "NVIDIA Corp.",
    "GOOG": "Alphabet Inc. (GOOG)", # 구글 클래스 A 주식
    "AMZN": "Amazon.com Inc.",
    "META": "Meta Platforms Inc.",
    "BRK-B": "Berkshire Hathaway Inc. (B shares)",
    "LLY": "Eli Lilly and Co.",
    "TSLA": "Tesla Inc.",
    "JPM": "JPMorgan Chase & Co." # 예시를 위해 10개 맞춤
}

# 날짜 설정 (오늘부터 3년 전)
end_date = datetime.now()
start_date = end_date - timedelta(days=3 * 365) # 3년 전 데이터

# 데이터 로딩 함수 (캐싱 적용)
@st.cache_data
def load_data(ticker_list, start, end):
    data = {}
    for ticker, name in ticker_list.items():
        try:
            # yfinance를 사용하여 주식 데이터 다운로드
            df = yf.download(ticker, start=start, end=end, progress=False)
            if not df.empty:
                data[ticker] = df['Adj Close'] # 수정 종가 사용
            else:
                st.warning(f"데이터를 가져올 수 없습니다: {name} ({ticker})")
        except Exception as e:
            st.error(f"데이터 로딩 중 오류 발생: {name} ({ticker}) - {e}")
    return data

# 데이터 로딩
stock_data = load_data(top10_companies, start_date, end_date)

st.subheader("📊 지난 3년간 주가 변화")

if not stock_data:
    st.error("데이터를 불러오는 데 실패했습니다. 인터넷 연결을 확인하거나 잠시 후 다시 시도해주세요.")
else:
    # 모든 주가를 첫날 가격 기준으로 정규화하여 변화율 비교
    normalized_data = pd.DataFrame()
    for ticker, series in stock_data.items():
        if not series.empty and len(series) > 0: # 데이터가 존재하고 비어있지 않은지 확인
            normalized_data[top10_companies[ticker]] = (series / series.iloc[0]) * 100
        else:
            st.warning(f"정규화할 데이터가 부족합니다: {top10_companies[ticker]} ({ticker})")


    if not normalized_data.empty:
        # Plotly Figure 객체 생성 (라인 그래프)
        fig = go.Figure()
        for col in normalized_data.columns:
            fig.add_trace(go.Scatter(x=normalized_data.index, y=normalized_data[col],
                                     mode='lines',
                                     name=col))

        # 그래프 레이아웃 업데이트 (인터랙티브 설정)
        fig.update_layout(
            title_text='시가총액 TOP 기업 주가 변화율 (3년 기준)',
            xaxis_title='날짜',
            yaxis_title='가격 변화율 (%) (첫날 기준 100%)',
            hovermode="x unified", # 마우스를 올렸을 때 x축 기준으로 모든 데이터 표시
            height=600,
            template="plotly_white", # 깔끔한 테마
            xaxis_rangeslider_visible=True, # 아래에 날짜 범위 슬라이더 표시
            legend=dict( # 범례 위치 조정
                orientation="h",
                yanchor="bottom",
                y=1.02,
                xanchor="right",
                x=1
            )
        )
        st.plotly_chart(fig, use_container_width=True)

        st.markdown("---")
        st.subheader("📈 개별 기업 주가 상세 보기 (캔들스틱 차트)")

        # 개별 기업 선택 드롭다운
        selected_company_name = st.selectbox(
            "자세히 보고 싶은 기업을 선택하세요:",
            list(top10_companies.values())
        )

        # 선택된 기업의 티커 찾기
        selected_ticker = [k for k, v in top10_companies.items() if v == selected_company_name][0]

        if selected_ticker in stock_data:
            try:
                # 캔들스틱 차트를 위한 Open, High, Low, Close 데이터 다시 다운로드
                ohlc_df = yf.download(selected_ticker, start=start_date, end=end_date, progress=False)

                if not ohlc_df.empty:
                    st.write(f"**{selected_company_name} ({selected_ticker})**의 지난 3년간 주가 차트")
                    
                    # 캔들스틱 차트 생성
                    fig_individual = go.Figure(data=[go.Candlestick(x=ohlc_df.index,
                                                                    open=ohlc_df['Open'],
                                                                    high=ohlc_df['High'],
                                                                    low=ohlc_df['Low'],
                                                                    close=ohlc_df['Close'],
                                                                    increasing_line_color='red', # 양봉 색상
                                                                    decreasing_line_color='blue' # 음봉 색상
                                                                    )])
                    fig_individual.update_layout(
                        title=f'{selected_company_name} ({selected_ticker}) 주가',
                        xaxis_title='날짜',
                        yaxis_title='주가 (USD)',
                        xaxis_rangeslider_visible=True # 캔들스틱 차트에도 슬라이더 유지
                    )
                    st.plotly_chart(fig_individual, use_container_width=True)

                    st.write("---")
                    st.subheader("데이터 테이블")
                    # 'Adj Close' 대신 전체 OHLCAV (Open, High, Low, Close, Adj Close, Volume) 데이터 표시
                    st.dataframe(ohlc_df.reset_index().rename(columns={'index': '날짜'}), use_container_width=True)
                else:
                    st.warning(f"{selected_company_name}의 상세 데이터를 불러올 수 없습니다.")
            except Exception as e:
                st.error(f"{selected_company_name}의 캔들스틱 차트 생성 중 오류 발생: {e}")
        else:
            st.warning(f"{selected_company_name}의 데이터를 불러올 수 없습니다.")

st.markdown("---")
# 투자 경고 문구
st.markdown(
    """
    <div style="text-align: center; font-size: 0.9em; color: gray;">
        ⚠️ 주식 투자는 원금 손실의 위험이 있습니다. 이 정보는 투자 조언이 아닙니다.
    </div>
    """,
    unsafe_allow_html=True
)
